    {% if 'irods_environment' in info %}
    <p>
        To be able to use the irods icommands or the irods python client, you can use the information below to connect to the ManGO storage server.
    </p>

    <ul class="nav nav-pills">
      <li class="nav-item">
        <a class="nav-link active" data-bs-toggle="pill" href="#password">Login data</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" data-bs-toggle="pill" href="#linux">iCommands on Linux</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" data-bs-toggle="pill" href="#windows">Python Client on Windows</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" data-bs-toggle="pill" href="#sftp">SFTP Client</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" data-bs-toggle="pill" href="#davrods">WebDAV</a>
      </li>
    </ul>

    <div class="tab-content">
      <div class="tab-pane container active p-1" id="password">
          <dl class="mx-auto ml-20 mt-3">
          <dt>Hostname</dt>
          <dd>{{ info['irods_environment']['irods_host'] }}</dd>
          <dt>Port</dt>
          <dd>{{ info['irods_environment']['irods_port'] }}</dd>
          <dt>Zone</dt>
          <dd>{{ info['irods_environment']['irods_zone_name'] }}</dd>
          <dt>Username</dt>
          <dd>{{ info['irods_environment']['irods_user_name'] }}</dd>
          <dt>Password</dt>
          <dd>
            <pre>{{ info['token'] }}</pre>
          </dd>
        </dl>
        <p>
          The provided password is valid for 4 hours only, refresh the page to get a
          new password.
        </p>
      </div>
      <div class="tab-pane container fade p-1" id="linux">
        {% if 'hpc-irods-setup-zone' in info %}
        <p class="mt-3">
          On the HPC tier1 or tier2 clusters in Leuven, run the snippet below to
          configure an irods client. The irods session itself will last for a
          week, afterwards repeat the command.
        </p>
        <pre><code>irods-setup --zone {{ info['hpc-irods-setup-zone'] }} | bash</code></pre>
        <p>
          From other HPC clusters in flanders, you can run
          <code
            >ssh login.hpc.kuleuven.be irods-setup --zone
            {{ info['hpc-irods-setup-zone'] }} | bash</code
          >. If this command through ssh does not work, please run it without
          <code>| bash</code> to troubleshoot.
        </p>
        <p>
          Alternatively, you can copy paste the snippet below to configure an irods client under Linux.
          The irods session itself will last for a week."
        </p>
      {% else %}
        <p class="mt-3">
          Run the snippet below to configure an irods client under Linux. The
          irods session itself will last for a week.
        </p>
      {% endif %}
<pre><code>mkdir -p ~/.irods
cat > ~/.irods/irods_environment.json <<'EOF'
{{ setup_json['linux'] }}
EOF
iinit -h | grep Version | grep -v -q 4.2. || sed -i 's/"irods_authentication_scheme": "pam_password"/"irods_authentication_scheme": "PAM"/' ~/.irods/irods_environment.json
echo '{{ info['token'] }}' | iinit --ttl 168 >/dev/null && echo You are now authenticated to irods. Your session is valid for 168 hours.
</code></pre>
      </div>
      <div class="tab-pane container fade p-1" id="windows">
        <p style="margin-top: 10px">
          Start a python interactive shell, and paste the snippet below to setup
          the necessary files to authenticate against irods. The script assumes
          that you installed the <code>python-irodsclient</code>. It will write
          the irods environment file and a password file. The written password
          file will grant access for 60 hours.
        </p>
<pre><code>config = """
{{ setup_json['windows'] }}
"""
password = "{{ info['token'] }}"

import os, os.path
from irods.session import iRODSSession
from irods.password_obfuscation import encode

def iinit(config, password):
    def put(file, contents):
        os.makedirs(os.path.dirname(file), exist_ok=True)
        with open(file, "w") as f:
            f.write(contents)
    env_file = os.getenv('IRODS_ENVIRONMENT_FILE', os.path.expanduser('~/.irods/irods_environment.json'))
    put(env_file, config)
    with iRODSSession(irods_env_file=env_file, password=password) as session:
        put(iRODSSession.get_irods_password_file(), encode(session.pam_pw_negotiated[0], uid=1000))
        print("You have successfully authenticated. Use iRODSSession(irods_env_file=" + repr(env_file) +") to start interacting with iRODS.")

iinit(config, password)
</code></pre>
      <!--
      <p>See below how to get started with the python client.</p>

      <h6>Get started with python</h6>
      <p class="mt-3">
        Inside any python environment, such as anaconda or jupyter notebook, on
        Linux or Windows, run the following snippet and adjust it to get started:
      </p>
<pre><code>import os, os.path
from irods.session import iRODSSession
env_file = os.getenv('IRODS_ENVIRONMENT_FILE', os.path.expanduser('~/.irods/irods_environment.json'))
with iRODSSession(irods_env_file=env_file) as session:
    # Do something
    coll = session.collections.get("/{{ info['irods_environment']['irods_zone_name'] }}/home/{{ info['irods_environment']['irods_user_name'] }}")
    print(coll.id)</code></pre>
      -->
      </div>
      <div class="tab-pane container fade p-1" id="sftp">
        <p style="margin-top: 10px">
          You can also use SFTP to connect to iRODS and use programs such as Filezilla, WinSCP or <code>lftp</code>.
          It is a file transfer protocol on top of SSH and SSH certificates are used for authentication.
        </p>
        <ol>

        {% if '-hpc-' in jobid %}
          <li>
            You need to run an <code>ssh-agent</code> capable of handling SSH certificates.<br />
            For Windows, <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">Pageant 0.78</a> or above can be used.
            For Linux, the standard OpenSSH agent will work.
          </li>
          <li>
            Connect with e.g. Putty to <code>firewall.vscentrum.be</code> with agent forwarding enabled.
            After having successfully connected, an SSH certificate should be injected in your forwarded agent.
          </li>
        {% else %}
          <li>
            Install <a href="https://ceifdoc.icts.kuleuven.be/lnx/tools/sshcerts/">certagent or kmk</a> on your local machine
            and use it to retrieve an SSH certificate.
          </li>
        {% endif %}
          <li>
            Open FileZilla or WinSCP, and connect using the following information:
            <dl class="mx-auto ml-20 mt-3">
              <dt>Hostname</dt>
              <dd>{{ sftp_host }}</dd>
              <dt>Port</dt>
              <dd>22</dd>
              <dt>Username</dt>
              <dd>{{ info['irods_environment']['irods_user_name'] }}</dd>
              <dt>Password</dt>
              <dd>
                Leave empty. For FileZilla set 'Authentication type' to 'Interactive'.
              </dd>
            </dl>
            Or use <code>lftp -u {{ info['irods_environment']['irods_user_name'] }}, sftp://{{ sftp_host }}</code>.
          </li>
        </ol>
      </div>
      <div class="tab-pane container fade p-1" id="davrods">
        <p style="margin-top: 10px">Access via WebDAV to iRODS is enabled but not supported.
          For programs that support it, use SFTP.
          If WebDAV access is used in Windows drive mapping, it is known to give regular timeouts.
        </p>
        <p>
          To connect to Davrods via WebDAV, go to
          <a href="https://{{ info['irods_environment']['irods_host'] }}:8443/"
            >https://{{ info['irods_environment']['irods_host'] }}:8443/</a
          >
          and enter the username and password displayed in the first tab. <br /><b
            >Make sure to copy the password without leading or trailing spaces.</b
          >
        </p>
      </div>
    </div>
    {% else %}
    <p style="margin-top: 10px">
      You can use SFTP to connect to iRODS and use programs such as Filezilla, WinSCP or <code>lftp</code>.
      It is a file transfer protocol on top of SSH and SSH certificates are used for authentication.
    </p>
    <ol>

    {% if '-hpc-' in jobid %}
      <li>
        You need to run an <code>ssh-agent</code> capable of handling SSH certificates.<br />
        For Windows, <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">Pageant 0.78</a> or above can be used.
        For Linux, the standard OpenSSH agent will work.
      </li>
      <li>
        Connect with e.g. Putty to <code>firewall.vscentrum.be</code> with agent forwarding enabled.
        After having successfully connected, an SSH certificate should be injected in your forwarded agent.
      </li>
    {% else %}
      <li>
        Install <a href="https://ceifdoc.icts.kuleuven.be/lnx/tools/sshcerts/">certagent or kmk</a> on your local machine
        and use it to retrieve an SSH certificate.
      </li>
    {% endif %}
      <li>
        Open FileZilla or WinSCP, and connect using the following information:
        <dl class="mx-auto ml-20 mt-3">
          <dt>Hostname</dt>
          <dd>{{ sftp_host }}</dd>
          <dt>Port</dt>
          <dd>22</dd>
          <dt>Username</dt>
          <dd>{{ session.openid_session.user_info.preferred_username }}</dd>
          <dt>Password</dt>
          <dd>
            Leave empty. For FileZilla set 'Authentication type' to 'Interactive'.
          </dd>
        </dl>
        Or use <code>lftp -u {{ session.openid_session.user_info.preferred_username }}, sftp://{{ sftp_host }}</code>.
      </li>
    </ol>
    {% endif %}
